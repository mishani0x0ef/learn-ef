// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjectHub.Data;

namespace ProjectHub.Data.Migrations
{
    [DbContext(typeof(HubContext))]
    [Migration("20200130154708_v0_6")]
    partial class v0_6
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ProjectHub.Domain.Common.HashTag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("HashTags");
                });

            modelBuilder.Entity("ProjectHub.Domain.Environment.Environment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModified")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Environments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "For development purposes.",
                            Name = "Develop"
                        },
                        new
                        {
                            Id = 2,
                            Description = "For testing and quality assurance.",
                            Name = "Test"
                        });
                });

            modelBuilder.Entity("ProjectHub.Domain.Environment.SiteLink", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EnvironmentId")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastModified")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EnvironmentId");

                    b.ToTable("SiteLinks");
                });

            modelBuilder.Entity("ProjectHub.Domain.Environment.SiteLinkHashTag", b =>
                {
                    b.Property<int>("SiteLinkId")
                        .HasColumnType("int");

                    b.Property<int>("HashTagId")
                        .HasColumnType("int");

                    b.HasKey("SiteLinkId", "HashTagId");

                    b.HasIndex("HashTagId");

                    b.ToTable("SiteLinkHashTag");
                });

            modelBuilder.Entity("ProjectHub.Domain.Environment.SiteLink", b =>
                {
                    b.HasOne("ProjectHub.Domain.Environment.Environment", "Environment")
                        .WithMany("SiteLinks")
                        .HasForeignKey("EnvironmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProjectHub.Domain.Environment.SiteLinkHashTag", b =>
                {
                    b.HasOne("ProjectHub.Domain.Common.HashTag", "HashTag")
                        .WithMany("SiteLinkHashTags")
                        .HasForeignKey("HashTagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjectHub.Domain.Environment.SiteLink", "SiteLink")
                        .WithMany("SiteLinkHashTags")
                        .HasForeignKey("SiteLinkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
